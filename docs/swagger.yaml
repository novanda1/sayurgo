definitions:
  controllers.requestOtpParams:
    properties:
      phone:
        type: string
    type: object
  controllers.verifOtpParams:
    properties:
      otp:
        type: string
      phone:
        type: string
    type: object
  controllers.verifOtpResponse:
    properties:
      success:
        type: boolean
      token:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  models.Cart:
    properties:
      createdAt:
        type: string
      id:
        type: string
      product:
        items:
          $ref: '#/definitions/models.CartProduct'
        type: array
      totalPrice:
        type: integer
      updatedAt:
        type: string
      userid:
        type: string
    required:
    - userid
    type: object
  models.CartProduct:
    properties:
      id:
        type: string
      productID:
        type: string
      totalProduct:
        type: integer
    required:
    - productID
    - totalProduct
    type: object
  models.Order:
    properties:
      createdAt:
        type: string
      id:
        type: string
      orderStatus:
        type: string
      products:
        items:
          $ref: '#/definitions/models.OrderProduct'
        type: array
      totalPrice:
        type: integer
      updatedAt:
        type: string
      userid:
        type: string
    type: object
  models.OrderProduct:
    properties:
      atPrice:
        type: integer
      productID:
        type: string
      totalProduct:
        type: integer
    required:
    - atPrice
    - productID
    - totalProduct
    type: object
  models.Product:
    properties:
      categories:
        items:
          type: string
        type: array
      createdAt:
        type: string
      discountPrice:
        type: integer
      id:
        type: string
      imageUrl:
        type: string
      information:
        type: string
      nutrition:
        type: string
      price:
        type: integer
      title:
        type: string
      unitType:
        type: string
      updatedAt:
        type: string
    required:
    - categories
    - imageUrl
    - information
    - nutrition
    - price
    - title
    - unitType
    type: object
  models.UpdateAmountCartProductParam:
    properties:
      totalProduct:
        type: integer
    required:
    - totalProduct
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      displayName:
        type: string
      id:
        type: string
      phone:
        type: string
      updatedAt:
        type: string
      userAddress:
        items:
          $ref: '#/definitions/models.UserAddress'
        type: array
    required:
    - phone
    type: object
  models.UserAddress:
    properties:
      address:
        type: string
      city:
        type: string
      createdAt:
        type: string
      detai:
        type: string
      id:
        type: string
      phone:
        type: string
      postalCode:
        type: string
      recipient:
        type: string
      title:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: novandaahsan1@gmail.com
    name: API Support
    url: https://github.com/novanda1
  description: The Sayurmax REST API built with GO
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: SayurGO API
  version: 0.0.1
paths:
  /admin/order/:
    put:
      consumes:
      - application/json
      description: 'Admin-Only: Change OrderStatus on User-Order'
      parameters:
      - description: Order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
      summary: 'Admin-Only: Change Order Status'
      tags:
      - Order
  /admin/products:
    post:
      consumes:
      - application/json
      description: Create a brand new product.
      parameters:
      - description: Product
        in: body
        name: body
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
      summary: 'Admin: Create Product'
      tags:
      - Product
  /admin/products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete specific product.
      parameters:
      - description: Product ID
        in: path
        name: id
        type: integer
      produces:
      - application/json
      summary: 'Admin: Delete Product'
      tags:
      - Product
    put:
      consumes:
      - application/json
      description: Update some data in specific product.
      parameters:
      - description: Product
        in: body
        name: body
        schema:
          $ref: '#/definitions/models.Product'
      - description: Product ID
        in: path
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
      summary: 'Admin: Update Product'
      tags:
      - Product
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Request Authorization that return OTP code.
      parameters:
      - description: Your Phone Number
        in: body
        name: phone
        required: true
        schema:
          $ref: '#/definitions/controllers.requestOtpParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.verifOtpParams'
      summary: Request OTP code
      tags:
      - Auth
  /api/auth/verif:
    post:
      consumes:
      - application/json
      description: Verify OTP code.
      parameters:
      - description: Your Phone Number
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controllers.verifOtpParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.verifOtpResponse'
      summary: Verify OTP code and get JWT code
      tags:
      - Auth
  /api/carts:
    get:
      consumes:
      - application/json
      description: Get cart data for specific user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Cart'
            type: array
      summary: Get cart
      tags:
      - Cart
    post:
      consumes:
      - application/json
      description: Create an Empty cart for user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Cart'
            type: array
      summary: Create Empty Cart
      tags:
      - Cart
  /api/carts/{productid}:
    delete:
      consumes:
      - application/json
      description: Delete specific product from user cart
      parameters:
      - description: Product ID
        in: path
        name: productid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Cart'
            type: array
      summary: Delete product from cart
      tags:
      - Cart
    post:
      consumes:
      - application/json
      description: Add product to user cart
      parameters:
      - description: Product ID
        in: path
        name: productid
        required: true
        type: string
      - description: Product ID
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CartProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Cart'
            type: array
      summary: Add product to cart
      tags:
      - Cart
    put:
      consumes:
      - application/json
      description: Change Product Amount in specific product-cart
      parameters:
      - description: Product ID
        in: path
        name: productid
        required: true
        type: string
      - description: Product Data
        in: body
        name: amount
        required: true
        schema:
          $ref: '#/definitions/models.UpdateAmountCartProductParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Cart'
            type: array
      summary: Change Product Amount in specific product-cart
      tags:
      - Cart
  /api/order/:
    get:
      consumes:
      - application/json
      description: Get order data from userid
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
      summary: Get Order
      tags:
      - Order
    post:
      consumes:
      - application/json
      description: Create an Order from Cart and delete all cart-product
      parameters:
      - description: Order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
      summary: Create Order
      tags:
      - Order
  /api/products:
    get:
      consumes:
      - application/json
      description: Get all product returned array of products.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
      summary: Get All Products
      tags:
      - Product
  /api/products/{id}:
    get:
      consumes:
      - application/json
      description: Get product returned products object.
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
      summary: Get Product
      tags:
      - Product
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
x-extension-openapi:
  example: value on a json format
